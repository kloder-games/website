{"version":3,"sources":["webpack:///./src/components/Tags.jsx","webpack:///./src/components/game/Header.jsx","webpack:///./src/components/Video.jsx","webpack:///./src/components/game/Slider.jsx","webpack:///./src/components/game/Marketplaces.jsx","webpack:///./src/components/game/Features.jsx","webpack:///./src/components/Social.jsx","webpack:///./src/components/game/Repository.jsx","webpack:///./src/templates/game.js"],"names":["StyledTags","styled","div","Tags","tags","split","map","x","idx","key","StyledHeader","Header","slug","title","date","tagline","categories","icon","alt","fixed","childImageSharp","width","height","substr","join","StyledContainer","StyledIframe","iframe","Video","youtube","src","frameBorder","allow","allowFullScreen","StyledSlider","props","bg","StyledComposition","StyledImage","StyledBackground","image","Slider","images","original","dots","arrows","infinite","speed","slidesToShow","slidesToScroll","StyledMarketplaces","markets","google","amazon","getId","Object","keys","find","y","includes","getIcon","injectIntl","marketplaces","intl","formatMessage","id","href","target","rel","aria-label","Icon","size","StyledFeatures","features","StyledSocial","StyledRepository","Repository","github","StyledGame","query","Game","data","game","markdownRemark","frontmatter","__html","html","Layout","SEO","Container","Markdown","text","description","dangerouslySetInnerHTML"],"mappings":"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","file":"component---src-templates-game-js-9e78690631987822e863.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst StyledTags = styled.div`\n  font-size: 80%;\n  font-weight: 700;\n  vertical-align: baseline;\n  span {\n    text-align: center;\n    padding: 0.25em 0.4em;\n    color: white;\n    background-color: var(--text-color);\n    display: inline-block;\n    line-height: 1;\n    white-space: nowrap;\n    border-radius: 0.25em;\n    text-transform: capitalize;\n    margin-right: 8px;\n  }\n`;\n\nconst Tags = ({ tags }) => (\n  <StyledTags>\n    {tags.split(',').map((x, idx) => (\n      <span key={idx}>{x}</span>\n    ))}\n  </StyledTags>\n);\n\nTags.propTypes = {\n  tags: PropTypes.string,\n};\n\nexport default Tags;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Img from 'gatsby-image';\n\nimport Tags from '../Tags';\n\nconst StyledHeader = styled.div`\n  display: grid;\n  grid-template-columns: 82px auto;\n  grid-gap: 16px;\n  align-items: top;\n  margin-bottom: 32px;\n  .gatsby-image-wrapper {\n    width: 100%;\n  }\n  h2,\n  h4 {\n    margin: 0;\n  }\n`;\n\nconst Header = ({ slug, title, date, tagline, categories, icon }) => (\n  <StyledHeader>\n    <Img\n      alt={title}\n      fixed={icon.childImageSharp.fixed}\n      width={82}\n      height={82}\n    />\n    <div>\n      <Tags tags={[categories, date.substr(0, 4)].join(',')} />\n      <h2>{title}</h2>\n      <h4>{tagline}</h4>\n    </div>\n  </StyledHeader>\n);\n\nHeader.propTypes = {\n  slug: PropTypes.string,\n  title: PropTypes.string,\n  date: PropTypes.string,\n  tagline: PropTypes.string,\n  categories: PropTypes.any,\n  icon: PropTypes.object,\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst StyledContainer = styled.div`\n  position: relative;\n  width: 100%;\n  height: 0;\n  padding-bottom: 56.26%;\n`;\n\nconst StyledIframe = styled.iframe`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n`;\n\nconst Video = ({ youtube }) => (\n  <StyledContainer>\n    <StyledIframe\n      title=\"Promo Video\"\n      width=\"100%\"\n      height=\"100%\"\n      src={`https://www.youtube.com/embed/${youtube}?rel=0&amp;showinfo=0`}\n      frameBorder=\"0\"\n      allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n      allowFullScreen=\"1\"\n    ></StyledIframe>\n  </StyledContainer>\n);\n\nVideo.propTypes = {\n  youtube: PropTypes.string,\n};\n\nexport default Video;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport ReactSlider from 'react-slick';\n\nimport Video from '../Video';\n\nimport '../../styles/slick.scss';\n\nconst StyledSlider = styled.div`\n  background-image: url(${props => props.bg});\n  background-attachment: fixed;\n  background-position: center center;\n  background-size: cover;\n  background-color: transparent;\n  padding: 60px 0;\n  @media only screen and (max-width: 600px) {\n    & {\n      padding: 32px 0;\n    }\n  }\n`;\n\nconst StyledContainer = styled.div`\n  max-width: 960px;\n  margin: 0 auto;\n  @media only screen and (max-width: 940px) {\n    & {\n      margin: 0 16px;\n    }\n  }\n`;\n\nconst StyledComposition = styled.div`\n  position: relative;\n  height: 0;\n  padding-bottom: 56.26%;\n`;\n\nconst StyledImage = styled.div`\n  position: absolute;\n  top: 0;\n  left: 50%;\n  width: auto;\n  height: 100%;\n\n  img {\n    margin-left: -50%;\n    width: auto;\n    height: 100%;\n    z-index: 1;\n  }\n`;\n\nconst StyledBackground = styled.div`\n  position: absolute;\n  top: 0px;\n  left: 0px;\n  width: 100%;\n  height: 100%;\n  background: url(${props => props.image});\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-position: center center;\n  filter: brightness(0.3);\n  box-shadow: inset 0 0 100px black;\n  z-index: -1;\n`;\n\nconst Slider = ({ slug, youtube, images, bg }) => (\n  <StyledSlider bg={bg.childImageSharp.original.src}>\n    <StyledContainer>\n      <ReactSlider\n        dots={true}\n        arrows={false}\n        infinite={true}\n        speed={500}\n        slidesToShow={1}\n        slidesToScroll={1}\n        //autoplay={true}\n      >\n        {youtube ? <Video youtube={youtube} /> : ''}\n        {images\n          .map(({ childImageSharp: { original: { src } } }, idx) => (\n            <StyledComposition key={idx}>\n              <StyledBackground image={src} />\n              <StyledImage>\n                <img src={src} />\n              </StyledImage>\n            </StyledComposition>\n          ))}\n      </ReactSlider>\n    </StyledContainer>\n  </StyledSlider>\n);\n\nSlider.propTypes = {\n  images: PropTypes.array,\n  slug: PropTypes.string,\n};\n\nexport default Slider;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { injectIntl } from 'gatsby-plugin-intl';\n\nimport Icon from '../Icon';\n\nconst StyledMarketplaces = styled.div`\n  margin-bottom: 32px;\n  h2 {\n    color: var(--primary-color);\n    margin-bottom: 8px;\n  }\n  a {\n    text-decoration: none;\n    color: var(--primary-color);\n    margin-right: 16px;\n  }\n`;\n\nconst markets = {\n  google: 'google-play',\n  amazon: 'amazon',\n  'github.io': 'github',\n  '': 'earth',\n};\n\nconst getId = x => Object.keys(markets).find(y => x.includes(y)) || '';\nconst getIcon = x => markets[getId(x)];\n\nconst Marketplaces = ({ marketplaces, intl }) => (\n  <StyledMarketplaces>\n    <h2>{intl.formatMessage({ id: 'Avaiable On' })}</h2>\n    {marketplaces.map((x, idx) => (\n      <a\n        href={x}\n        target={'_blank'}\n        key={idx}\n        rel={'noopener noreferrer'}\n        aria-label={getId(x)}\n      >\n        <Icon id={getIcon(x)} size={32} />\n      </a>\n    ))}\n  </StyledMarketplaces>\n);\n\nMarketplaces.propTypes = {\n  marketplaces: PropTypes.array,\n};\n\nexport default injectIntl(Marketplaces);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { injectIntl } from 'gatsby-plugin-intl';\n\nconst StyledFeatures = styled.div`\n  margin-bottom: 32px;\n  h2 {\n    color: var(--primary-color);\n    margin-bottom: 8px;\n  }\n  ul {\n    margin: 0;\n    padding: 0 0 0 16px;\n  }\n`;\n\nconst Features = ({ features, intl }) => (\n  <StyledFeatures>\n    <h2>{intl.formatMessage({ id: 'Features' })}</h2>\n    <ul>\n      {features.map((x, idx) => (\n        <li key={idx}>{x}</li>\n      ))}\n    </ul>\n  </StyledFeatures>\n);\n\nFeatures.propTypes = {\n  features: PropTypes.array,\n};\n\nexport default injectIntl(Features);\n\n","import React from 'react';\nimport styled from 'styled-components';\nimport { injectIntl } from 'gatsby-plugin-intl';\n\nimport Icon from './Icon';\n\nconst StyledSocial = styled.div`\n  a {\n    text-decoration: none;\n    color: var(--primary-color);\n    margin-right: 16px;\n  }\n`;\n\nconst Social = ({ intl }) => (\n  <StyledSocial>\n    <a\n      href=\"https://twitter.com/share?url=https%3A%2F%2Fgames.kloder.com%2Fes%2Fgames%2Fbouncer&amp;text=Bouncer\"\n      title={intl.formatMessage({ id: 'Share On' }) + ' Twitter'}\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      <Icon id={'twitter'} size={24} />\n    </a>\n    <a\n      href=\"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fgames.kloder.com%2Fes%2Fgames%2Fbouncer\"\n      title={intl.formatMessage({ id: 'Share On' }) + ' Facebook'}\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      <Icon id={'facebook'} size={24} />\n    </a>\n    <a\n      href=\"http://www.stumbleupon.com/submit?url=https%3A%2F%2Fgames.kloder.com%2Fes%2Fgames%2Fbouncer&amp;title=Bouncer\"\n      title={intl.formatMessage({ id: 'Share On' }) + ' StumbleUpon'}\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      <Icon id={'stumbleupon'} size={24} />\n    </a>\n  </StyledSocial>\n);\n\nexport default injectIntl(Social);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { FormattedMessage } from 'gatsby-plugin-intl';\n\nimport Icon from '../Icon';\n\nconst StyledRepository = styled.div`\n  margin-bottom: 32px;\n  h2 {\n    color: var(--primary-color);\n    margin-bottom: 8px;\n  }\n`;\n\nconst Repository = ({ github }) => (\n  <StyledRepository>\n    <h2>\n      <FormattedMessage id={'Repository'} />\n    </h2>\n    <p>\n      <a href={github} target={'_blank'} rel={'noopener noreferrer'}>\n        <Icon id={'github'} /> {github.substr(19)}\n      </a>\n    </p>\n  </StyledRepository>\n);\n\nRepository.propTypes = {\n  github: PropTypes.string,\n};\n\nexport default Repository;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport styled from 'styled-components';\n\nimport Layout from '../components/Layout';\nimport SEO from '../components/layout/SEO';\nimport Container from '../components/Container';\nimport Markdown from '../components/Markdown';\nimport Header from '../components/game/Header';\nimport Slider from '../components/game/Slider';\nimport Marketplaces from '../components/game/Marketplaces';\nimport Features from '../components/game/Features';\nimport Social from '../components/Social';\nimport Repository from '../components/game/Repository';\n\nconst StyledGame = styled.div`\n  display: grid;\n  grid-template-columns: auto 250px;\n  grid-gap: 32px;\n  @media only screen and (max-width: 940px) {\n    & {\n      grid-template-columns: auto;\n    }\n  }\n`;\n\nconst Game = ({ data }) => {\n  const game = data.markdownRemark.frontmatter;\n  const __html = data.markdownRemark.html;\n  return (\n    <Layout>\n      <SEO title={game.title} />\n      <Slider {...game} />\n      <Container>\n        <StyledGame>\n          <div>\n            <Header {...game} />\n            <Markdown text={game.description} />\n            <div dangerouslySetInnerHTML={{ __html }} />\n            <Social />\n          </div>\n          <div>\n            {game.marketplaces ? <Marketplaces {...game} /> : ''}\n            {game.features ? <Features {...game} /> : ''}\n            {game.github ? <Repository {...game} /> : ''}\n          </div>\n        </StyledGame>\n      </Container>\n    </Layout>\n  );\n};\n\nexport default Game;\n\nexport const query = graphql`\n  query($slug: String!, $locale: String) {\n    markdownRemark(frontmatter: { slug: { eq: $slug }, locale: { eq: $locale } }) {\n      frontmatter {\n        slug\n        title\n        date\n        tagline\n        marketplaces\n        youtube\n        images {\n          childImageSharp {\n            original {\n              src\n            }\n          }\n        }\n        bg {\n          childImageSharp {\n            original {\n              src\n            }\n          }\n        }\n        icon {\n          childImageSharp {\n            fixed(width: 82, height: 82) {\n              ...GatsbyImageSharpFixed_withWebp\n            }\n          }\n        }\n        categories\n        features\n        orientation\n        github\n      }\n      html\n    }\n  }\n`;\n"],"sourceRoot":""}