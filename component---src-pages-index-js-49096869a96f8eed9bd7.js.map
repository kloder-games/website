{"version":3,"sources":["webpack:///./data/static/kpis.js","webpack:///./src/components/home/Kpi.jsx","webpack:///./src/components/home/KpiGrid.jsx","webpack:///./src/components/home/Slider.jsx","webpack:///./src/pages/index.js","webpack:///./src/components/Container.jsx"],"names":["title","en","es","description","icon","FaOsi","FaGamepad","FaThumbsUp","StyledIcon","styled","div","StyledKPI","KPI","Icon","size","color","StyledKpiGrid","injectIntl","intl","kpis","map","x","idx","Kpi","key","locale","StyledSlide","props","bg","StyledSlideContent","StyledSlider","games","dots","arrows","infinite","speed","slidesToShow","slidesToScroll","autoplay","childImageSharp","original","src","fixed","logo","height","tagline","Button","to","slug","formatMessage","id","query","data","Layout","SEO","allMarkdownRemark","edges","node","frontmatter","Container","featured","StyledInner","StyledContainer","children"],"mappings":"8NAEe,GACb,CACEA,MAAO,CACLC,GAAI,oBACJC,GAAI,4BAENC,YAAa,CACXF,GAAI,sCACJC,GAAI,oDAENE,KAAMC,KAER,CACEL,MAAO,CACLC,GAAI,QACJC,GAAI,SAENC,YAAa,CACXF,GAAI,gDACJC,GAAI,+EAENE,KAAME,KAER,CACEN,MAAO,CACLC,GAAI,UACJC,GAAI,WAENC,YAAa,CACXF,GAAI,wDACJC,GAAI,6DAENE,KAAMG,MC9BJC,EAAaC,IAAOC,IAAV,sEAAGD,CAAH,qDAMVE,EAAYF,IAAOC,IAAV,qEAAGD,CAAH,gDAqBAG,EAhBH,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMb,EAAT,EAASA,MAAOG,EAAhB,EAAgBA,YAAhB,OACV,kBAACQ,EAAD,KACE,kBAACH,EAAD,KACE,kBAACK,EAAD,CAAMC,KAAM,GAAIC,MAAO,0BAEzB,4BAAKf,GACL,2BAAIG,KCbFa,EAAgBP,IAAOC,IAAV,yEAAGD,CAAH,gGAuBJQ,wBAjBC,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACd,kBAACF,EAAD,KACGG,EAAKC,KAAI,SAACC,EAAGC,GAAJ,OACR,kBAACC,EAAD,CACEC,IAAKF,EACLT,KAAMQ,EAAEjB,KACRJ,MAAOqB,EAAErB,MAAMkB,EAAKO,QACpBtB,YAAakB,EAAElB,YAAYe,EAAKO,iB,8ECVlCC,EAAcjB,IAAOC,IAAV,0EAAGD,CAAH,qGAIS,SAACkB,GAAD,OAAWA,EAAMC,MAGrCC,EAAqBpB,IAAOC,IAAV,iFAAGD,CAAH,+WA0BlBqB,EAAerB,IAAOC,IAAV,2EAAGD,CAAH,iBAyCHQ,wBArCA,SAAC,GAAD,IAAGc,EAAH,EAAGA,MAAOb,EAAV,EAAUA,KAAV,OACb,kBAACY,EAAD,KACE,kBAAC,IAAD,CACEE,MAAM,EACNC,QAAQ,EACRC,UAAU,EACVC,MAAO,IACPC,aAAc,EACdC,eAAgB,EAChBC,UAAU,GAETP,EAAMX,KAAI,SAACC,EAAGC,GAAJ,OACT,kBAACI,EAAD,CACEF,IAAKF,EACLM,GAAIP,EAAEO,GAAGW,gBAAgBC,SAASC,KAElC,kBAACZ,EAAD,KACE,kBAAC,IAAD,CACEa,MAAOrB,EAAEsB,KAAKJ,gBAAgBG,MAC9BE,OAAQ,MAEV,4BAAKvB,EAAErB,OACP,2BAAIqB,EAAEwB,SACN,kBAACC,EAAA,EAAD,CAAQC,GAAE,UAAY1B,EAAE2B,MACrB9B,EAAK+B,cAAc,CAAEC,GAAI,oBClD3BC,GAFElC,gCAVG,SAAC,GAAD,IAAGmC,EAAH,EAAGA,KAAMlC,EAAT,EAASA,KAAT,OAChB,kBAACmC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKtD,MAAOkB,EAAK+B,cAAc,CAAEC,GAAI,YACrC,kBAAC,EAAD,CAAQnB,MAAOqB,EAAKG,kBAAkBC,MAAMpC,KAAI,SAAAC,GAAC,OAAIA,EAAEoC,KAAKC,iBAC5D,kBAACC,EAAA,EAAD,CAAWC,UAAU,GACnB,kBAAC,EAAD,WAOY,a,kCCtBlB,qCAIMC,EAAcpD,IAAOC,IAAV,6EAAGD,CAAH,8GAUXqD,EAAkBrD,IAAOC,IAAV,iFAAGD,CAAH,SACjB,SAAAkB,GAAK,OAAKA,EAAMiC,SAAW,6BAA+B,MAc/CD,IAXG,SAAC,GAAD,IAAGI,EAAH,EAAGA,SAAUH,EAAb,EAAaA,SAAb,OAChB,kBAACE,EAAD,CAAiBF,SAAUA,GACzB,kBAACC,EAAD,KAAcE","file":"component---src-pages-index-js-49096869a96f8eed9bd7.js","sourcesContent":["import { FaOsi, FaGamepad, FaThumbsUp } from 'react-icons/fa';\n\nexport default [\n  {\n    title: {\n      en: 'Open Source Tools',\n      es: 'Herramientas Open Source',\n    },\n    description: {\n      en: 'We work only with Open Source Tools',\n      es: 'Trabajamos sólo con herramientas de código libre',\n    },\n    icon: FaOsi\n  },\n  {\n    title: {\n      en: 'Retro',\n      es: 'Retro',\n    },\n    description: {\n      en: 'We love retro games so we make this a feature',\n      es: 'Nos encantan los juegos retro por lo que hacemos de esto una característica',\n    },\n    icon: FaGamepad\n  },\n  {\n    title: {\n      en: 'Quality',\n      es: 'Calidad',\n    },\n    description: {\n      en: 'We improve the quality of our games on each iteration',\n      es: 'Mejoramos la calidad de nuestros juegos en cada iteración',\n    },\n    icon: FaThumbsUp\n  },\n];\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst StyledIcon = styled.div`\n  margin-bottom: 1rem;\n  height: 64px;\n  margin-top: 32px;\n`;\n\nconst StyledKPI = styled.div`\n  text-align: center;\n  flex: 1 1 33.3333333333%;\n`;\n\nconst KPI = ({ Icon, title, description }) => (\n  <StyledKPI>\n    <StyledIcon>\n      <Icon size={54} color={'var(--primary-color)'} />\n    </StyledIcon>\n    <h3>{title}</h3>\n    <p>{description}</p>\n  </StyledKPI>\n);\n\nKPI.propTypes = {\n  icon: PropTypes.node,\n  title: PropTypes.string,\n  description: PropTypes.string,\n};\n\nexport default KPI;\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { injectIntl } from 'gatsby-plugin-intl';\n\nimport kpis from '../../../data/static/kpis';\nimport Kpi from './Kpi';\n\nconst StyledKpiGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n  grid-gap: 2rem 2rem;\n`;\n\nconst KpiGrid = ({ intl }) => (\n  <StyledKpiGrid>\n    {kpis.map((x, idx) => (\n      <Kpi\n        key={idx}\n        Icon={x.icon}\n        title={x.title[intl.locale]}\n        description={x.description[intl.locale]}\n      />\n    ))}\n  </StyledKpiGrid>\n);\n\nKpiGrid.propTypes = {\n  intl: PropTypes.object,\n};\n\nexport default injectIntl(KpiGrid);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport ReactSlider from 'react-slick';\nimport { injectIntl } from 'gatsby-plugin-intl';\nimport Img from 'gatsby-image';\n\nimport '../../styles/slick.scss';\n\nimport Button from '../Button';\n\nconst StyledSlide = styled.div`\n  height: 500px;\n  background-size: cover;\n  background-position: center center;\n  background-image: url(${(props) => props.bg});\n`;\n\nconst StyledSlideContent = styled.div`\n  height: 100%;\n  display: grid;\n  max-width: 720px;\n  justify-items: center;\n  align-content: center;\n  justify-content: center;\n  color: white;\n  text-align: center;\n  margin: 0 auto;\n  padding: 0 16px;\n  h2 {\n    text-transform: uppercase;\n    font-family: 'Roboto Condensed', sans-serif;\n    font-size: 56px;\n    margin-bottom: 0px;\n    margin-top: 16px;\n  }\n  p {\n    text-transform: uppercase;\n    font-size: 32px;\n    line-height: 32px;\n    margin: 0 0 32px;\n  }\n`;\n\nconst StyledSlider = styled.div`\n  margin: 0px;\n`;\n\nconst Slider = ({ games, intl }) => (\n  <StyledSlider>\n    <ReactSlider\n      dots={true}\n      arrows={false}\n      infinite={true}\n      speed={500}\n      slidesToShow={1}\n      slidesToScroll={1}\n      autoplay={true}\n    >\n      {games.map((x, idx) => (\n        <StyledSlide\n          key={idx}\n          bg={x.bg.childImageSharp.original.src}\n        >\n          <StyledSlideContent>\n            <Img\n              fixed={x.logo.childImageSharp.fixed}\n              height={120}\n            />\n            <h2>{x.title}</h2>\n            <p>{x.tagline}</p>\n            <Button to={`/games/${x.slug}`}>\n              {intl.formatMessage({ id: 'Go !' })}\n            </Button>\n          </StyledSlideContent>\n        </StyledSlide>\n      ))}\n    </ReactSlider>\n  </StyledSlider>\n);\n\nSlider.propTypes = {\n  games: PropTypes.array,\n};\n\nexport default injectIntl(Slider);\n","import React from 'react';\nimport { injectIntl } from 'gatsby-plugin-intl';\nimport { graphql } from 'gatsby';\n\nimport Layout from '../components/Layout';\nimport SEO from '../components/layout/SEO';\nimport KpiGrid from '../components/home/KpiGrid';\nimport Container from '../components/Container';\nimport Slider from '../components/home/Slider';\n\nconst IndexPage = ({ data, intl }) => (\n  <Layout>\n    <SEO title={intl.formatMessage({ id: 'Start' })} />\n    <Slider games={data.allMarkdownRemark.edges.map(x => x.node.frontmatter)} />\n    <Container featured={true}>\n      <KpiGrid />\n    </Container>\n  </Layout>\n);\n\nexport default injectIntl(IndexPage);\n\nexport const query = graphql`\n  query GamesForHomeQuery($locale: String) {\n    allMarkdownRemark(\n      filter: { frontmatter: { locale: { eq: $locale }, published: { eq: true } } }\n      sort: { order: DESC, fields: frontmatter___date }\n      limit: 3\n    ) {\n      edges {\n        node {\n          frontmatter {\n            title\n            tagline\n            slug\n            bg {\n              childImageSharp {\n                original {\n                  src\n                }\n              }\n            }\n            logo {\n              childImageSharp {\n                fixed(\n                  height: 120,\n                  quality: 100,\n                  fit: CONTAIN,\n                  background: \"transparent\"\n                ) {\n                  ...GatsbyImageSharpFixed_withWebp\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst StyledInner = styled.div`\n  margin: 0 auto;\n  padding: 32px 0;\n  max-width: 960px;\n  @media only screen and (max-width: 960px) {\n    & {\n      max-width: 80%;\n    }\n  }\n`;\nconst StyledContainer = styled.div`\n  ${props => (props.featured ? 'background-color: #ebebeb;' : '')}\n`;\n\nconst Container = ({ children, featured }) => (\n  <StyledContainer featured={featured}>\n    <StyledInner>{children}</StyledInner>\n  </StyledContainer>\n);\n\nContainer.propTypes = {\n  children: PropTypes.node,\n  featured: PropTypes.bool,\n};\n\nexport default Container;\n"],"sourceRoot":""}