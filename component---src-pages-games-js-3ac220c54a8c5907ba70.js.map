{"version":3,"sources":["webpack:///./src/components/games/Item.jsx","webpack:///./src/components/games/Grid.jsx","webpack:///./src/pages/games.js","webpack:///./src/components/Container.jsx","webpack:///./src/components/Separator.jsx"],"names":["StyledImage","styled","div","props","published","css","StyledTitle","StyledDescription","StyledItem","Item","slug","title","tagline","icon","to","alt","fixed","childImageSharp","width","height","StyledGrid","Grid","games","map","x","idx","key","query","injectIntl","data","intl","Layout","SEO","formatMessage","id","Container","Separator","allMarkdownRemark","edges","node","frontmatter","StyledInner","StyledContainer","featured","children","StyledSeparator"],"mappings":"qPAMMA,EAAcC,IAAOC,IAAV,oEAAGD,CAAH,4CAGb,SAAAE,GAAK,OAAKA,EAAMC,UAId,GAJ0BC,YAAnB,4CAOPC,EAAcL,IAAOC,IAAV,oEAAGD,CAAH,uEAOXM,EAAoBN,IAAOC,IAAV,0EAAGD,CAAH,wBAIjBO,EAAaP,IAAOC,IAAV,mEAAGD,CAAH,kBA2BDQ,EAvBF,SAAC,GAAD,IAAGL,EAAH,EAAGA,UAAWM,EAAd,EAAcA,KAAMC,EAApB,EAAoBA,MAAOC,EAA3B,EAA2BA,QAASC,EAApC,EAAoCA,KAApC,OACX,kBAACL,EAAD,KACE,kBAACR,EAAD,CAAaI,UAAWA,GACtB,kBAAC,OAAD,CAAMU,GAAE,UAAYJ,GAClB,kBAAC,IAAD,CACEK,IAAKJ,EACLK,MAAOH,EAAKI,gBAAgBD,MAC5BE,MAAO,IACPC,OAAQ,QAId,kBAACb,EAAD,KAAcK,GACd,kBAACJ,EAAD,KAAoBK,KCtClBQ,EAAanB,IAAOC,IAAV,mEAAGD,CAAH,+KAsBDoB,EAZF,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACX,kBAACF,EAAD,KACGE,EAAMC,KAAI,SAACC,EAAGC,GAAJ,OACT,kBAAC,EAAD,iBAAUD,EAAV,CAAaE,IAAKD,U,YCGXE,GAFEC,gCAVD,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,KAAT,OACZ,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKrB,MAAOmB,EAAKG,cAAc,CAAEC,GAAI,YACrC,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAWzB,MAAOmB,EAAKG,cAAc,CAAEC,GAAI,YAC3C,kBAAC,EAAD,CAAMZ,MAAOO,EAAKQ,kBAAkBC,MAAMf,KAAI,SAAAC,GAAC,OAAIA,EAAEe,KAAKC,sBAO9C,e,kCCtBlB,qCAIMC,EAAcxC,IAAOC,IAAV,6EAAGD,CAAH,8GAUXyC,EAAkBzC,IAAOC,IAAV,iFAAGD,CAAH,SACjB,SAAAE,GAAK,OAAKA,EAAMwC,SAAW,6BAA+B,MAc/CR,IAXG,SAAC,GAAD,IAAGS,EAAH,EAAGA,SAAUD,EAAb,EAAaA,SAAb,OAChB,kBAACD,EAAD,CAAiBC,SAAUA,GACzB,kBAACF,EAAD,KAAcG,M,kCCpBlB,yBAGMC,EAHN,UAGwB5C,EAAOC,IAAV,6EAAGD,CAAH,qGAmBNmC,IAPG,SAAC,GAAD,IAAGzB,EAAH,EAAGA,MAAH,OAChB,kBAACkC,EAAD,KACE,4BAAKlC,GACL","file":"component---src-pages-games-js-3ac220c54a8c5907ba70.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby-plugin-intl';\nimport styled, { css } from 'styled-components';\nimport Img from 'gatsby-image';\n\nconst StyledImage = styled.div`\n  overflow: hidden;\n  border-radious: 3px;\n  ${props => !props.published ? css`\n    img {\n      filter: blur(2px) opacity(0.2);\n    }\n  ` : ''}\n`;\n\nconst StyledTitle = styled.div`\n  font-size: 18px;\n  font-weight: bold;\n  margin-top: 8px;\n  text-align: center;\n`;\n\nconst StyledDescription = styled.div`\n  text-align: center;\n`;\n\nconst StyledItem = styled.div`\n  width: 200px;\n`;\n\nconst Item = ({ published, slug, title, tagline, icon }) => (\n  <StyledItem>\n    <StyledImage published={published}>\n      <Link to={`/games/${slug}`}>\n        <Img\n          alt={title}\n          fixed={icon.childImageSharp.fixed}\n          width={200}\n          height={200}\n        />\n      </Link>\n    </StyledImage>\n    <StyledTitle>{title}</StyledTitle>\n    <StyledDescription>{tagline}</StyledDescription>\n  </StyledItem>\n);\n\nItem.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  tagline: PropTypes.string,\n};\n\nexport default Item;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport Item from './Item';\n\nconst StyledGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  grid-gap: 32px;\n  grid-auto-flow: dense;\n  justify-content: center;\n  justify-items: center;\n  margin-bottom: 2rem;\n`;\n\nconst Grid = ({ games }) => (\n  <StyledGrid>\n    {games.map((x, idx) => (\n      <Item {...x} key={idx} />\n    ))}\n  </StyledGrid>\n);\n\nGrid.propTypes = {\n  games: PropTypes.array,\n};\n\nexport default Grid;\n","import React from 'react';\nimport { injectIntl } from 'gatsby-plugin-intl';\nimport { graphql } from 'gatsby';\n\nimport Layout from '../components/Layout';\nimport SEO from '../components/layout/SEO';\nimport Separator from '../components/Separator';\nimport Grid from '../components/games/Grid';\nimport Container from '../components/Container';\n\nconst Games = ({ data, intl }) => (\n  <Layout>\n    <SEO title={intl.formatMessage({ id: 'Games' })} />\n    <Container>\n      <Separator title={intl.formatMessage({ id: 'Games' })} />\n      <Grid games={data.allMarkdownRemark.edges.map(x => x.node.frontmatter)} />\n    </Container>\n  </Layout>\n);\n\nexport default injectIntl(Games);\n\nexport const query = graphql`\n  query GamesQuery($locale: String) {\n    allMarkdownRemark(\n      filter: { frontmatter: { locale: { eq: $locale } } }\n      sort: { order: DESC, fields: frontmatter___date }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            title\n            tagline\n            slug\n            published\n            icon {\n              childImageSharp {\n                fixed(width: 200, height: 200) {\n                  ...GatsbyImageSharpFixed_withWebp\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst StyledInner = styled.div`\n  margin: 0 auto;\n  padding: 32px 0;\n  max-width: 960px;\n  @media only screen and (max-width: 960px) {\n    & {\n      max-width: 80%;\n    }\n  }\n`;\nconst StyledContainer = styled.div`\n  ${props => (props.featured ? 'background-color: #ebebeb;' : '')}\n`;\n\nconst Container = ({ children, featured }) => (\n  <StyledContainer featured={featured}>\n    <StyledInner>{children}</StyledInner>\n  </StyledContainer>\n);\n\nContainer.propTypes = {\n  children: PropTypes.node,\n  featured: PropTypes.bool,\n};\n\nexport default Container;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledSeparator = styled.div`\n  h2 {\n    text-align: center;\n  }\n  div {\n    width: 30px;\n    height: 3px;\n    background-color: #911;\n    margin: 0 auto 60px auto;\n  }\n`;\n\nconst Separator = ({ title }) => (\n  <StyledSeparator>\n    <h2>{title}</h2>\n    <div />\n  </StyledSeparator>\n);\n\nexport default Separator;\n\n"],"sourceRoot":""}